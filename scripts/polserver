#!/usr/bin/env python

from http.server import BaseHTTPRequestHandler
from http.server import HTTPServer

from pqnstack.pqn.drivers.polarimeter import ArduinoPolarimeter

polarimeter = ArduinoPolarimeter()
polarimeter.start_normalizing()


class RequestHandler(BaseHTTPRequestHandler):
    def do_OPTIONS(self):  # noqa: N802
        status = 200
        self.send_response(status)
        self.send_header("Access-Control-Allow-Origin", "https://pqnetwork.web.illinois.edu")
        self.send_header("Access-Control-Allow-Methods", "GET, POST, HEAD, OPTIONS")
        self.send_header("Access-Control-Allow-Headers", "X-Requested-With, Content-Type, Cache-Control, Authorization")
        self.send_header("Access-Control-Allow-Credentials", "true")
        self.send_header("Access-Control-Allow-Private-Network", "true")
        self.end_headers()

    def do_GET(self):  # noqa: N802
        status = 200
        content_type = "text/plain"
        response_content = ""

        if self.path == "/polarimeter":
            angle = polarimeter.read().theta
            response_content = str(f"{angle:.2f}")
        else:
            status = 404

        self.send_response(status)
        self.send_header("Access-Control-Allow-Origin", "https://pqnetwork.web.illinois.edu")
        self.send_header("Cache-Control", "no-store")
        self.send_header("Content-Type", content_type)
        self.end_headers()
        self.wfile.write(bytes(response_content, "utf-8"))

    def do_POST(self):  # noqa: N802
        status = 200
        content_type = "text/plain"
        response_content = ""

        if self.path == "/polarimeter/start_normalizing":
            polarimeter.start_normalizing()
        elif self.path == "/polarimeter/stop_normalizing":
            polarimeter.stop_normalizing()
        else:
            status = 404

        self.send_response(status)
        self.send_header("Content-Type", content_type)
        self.end_headers()
        self.wfile.write(bytes(response_content, "utf-8"))


if __name__ == "__main__":
    server_address = ("127.0.0.1", 8000)
    print("Starting server...")
    try:
        httpd = HTTPServer(server_address, RequestHandler)
        print("Server started at http://127.0.0.1:8000/")
        httpd.serve_forever()
    except KeyboardInterrupt:
        pass
    finally:
        httpd.shutdown()

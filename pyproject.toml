[project]
name = "pqn"
version = "0.1.0"
description = "Illinois Computes work on software stack for PQN."
authors = [
    { name = "Santiano Nunez-Corrales", email = "nunezco2@illinois.edu" },
    { name = "Benjamin Nussbaum", email = "bn9@illinois.edu" },
    { name = "Marcos Frenkel", email = "marcosf2@illinois.edu"}
]
dependencies = [
    "numpy>=2.1.0",
    "matplotlib>=3.9.2",
    "pyfirmata2>=2.5.0",
    "thorlabs-apt-device>=0.3.8",
    "pyzmq>=26.2.0",
    "dataclasses-json>=0.6.7",
]
requires-python = ">=3.12"
readme = "README.md"
license = { text = "MIT" }


[tool.pdm.dev-dependencies]
dev = [
    "ruff>=0.6.2",
    "pytest-cov>=5.0.0",
    "mypy>=1.11.2",
    "jupyterlab>=4.2.5",
]

[tool.pdm.scripts]
lint = "ruff check"
format = "ruff format"
test = "pytest"
coverage = "pytest --cov=src"

[tool.ruff]
line-length = 120

[tool.ruff.lint]
# See https://docs.astral.sh/ruff/rules/ for details.
select = [
    # Common conventions, errors, and bugs
    "B",   # Bugbear
    "D",   # Docstrings
    "E",   # Pycodestyle errors
    "F",   # Pyflakes rules
    "N",   # Naming conventions
    "PD",  # Pandas conventions
    "PLC", # Pylint conventions
    "PLE", # Pylint errors
    "PT",  # Pytest conventions

    # Simpler, clearner, more Pythonic code
    "C4",  # Comprehensions
    "EM",  # Error messages
    "PIE", # Misc. rules
    "RET", # Return values
    "RUF", # Ruff-specific rules
    "SIM", # Simplify

    # Modernize code
    "ANN001", # Function argument type annotations
    "ANN2",   # Function return type annotations
    "DTZ",    # Require timezone information when using datetime
    "FURB",   # Refurbish/modernize code
    "NPY",    # Avoid Numpy deprecations
    "PERF",   # Avoid performance anti-patterns
    "PTH",    # Prefer pathlib over alternatives
    "UP",     # Use newest syntax according to project.requires-python

    # Logging
    "G",   # Logging setup
    "LOG", # Log messages
    "T20", # Check for print statements

    # Imports
    "I",      # Sort and add missing imports with isort
    "TID252", # Prefer absolute imports over relative imports from parent modules
]

ignore = [
    # "ANN", # Uncomment if you don't want to be reminded about type annotations
    "D1",  # Don't warn about missing docstrings

    # Ignore rules which are redundant when using the formatter.
    # See https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules for details.
    "E111",
    "E114",
    "E117",
    "D206",
    "D300",
    "E501",
]

[tool.ruff.lint.extend-per-file-ignores]
# Skip docstring and return type annotation rules for test files.
"tests/*" = ["ANN2", "D"]
# Run pytest lint rules only in test files.
"!tests/*" = ["PT"]
# Allow "unused" imports when exposing objects from submodules.
"**/__init__.py" = ["F401"]

[tool.ruff.lint.isort]
force-single-line = true

[tool.ruff.lint.pydocstyle]
convention = "numpy" # One of: "google" | "numpy" | "pep257"

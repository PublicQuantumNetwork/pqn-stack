#!/usr/bin/env python

import json
import sys
from collections.abc import Callable
from dataclasses import dataclass
from http.server import BaseHTTPRequestHandler
from http.server import HTTPServer

HOST = "127.0.0.1"
PORT = 8000
ADDRESS = (HOST, PORT)


@dataclass
class MockPolarimeter:
    angle: float = 0.0


def get_handler(mp: MockPolarimeter) -> Callable[..., BaseHTTPRequestHandler]:
    class RequestHandler(BaseHTTPRequestHandler):
        angle: float = 0.0

        def do_OPTIONS(self) -> None:  # noqa: N802
            status = 200
            self.send_response(status)
            self.send_header("Access-Control-Allow-Origin", "https://pqnetwork.web.illinois.edu")
            self.send_header("Access-Control-Allow-Methods", "GET, POST, HEAD, OPTIONS")
            self.send_header("Access-Control-Allow-Headers", "Content-Type, Cache-Control, Authorization")
            self.send_header("Access-Control-Allow-Credentials", "true")
            self.send_header("Access-Control-Allow-Private-Network", "true")
            self.end_headers()

        def do_GET(self) -> None:  # noqa: N802
            status = 200
            content_type = "text/plain"
            response_content = ""

            if self.path == "/polarimeter":
                response_content = str(f"{mp.angle:.2f}")
            else:
                status = 404

            self.send_response(status)
            self.send_header("Access-Control-Allow-Origin", "https://pqnetwork.web.illinois.edu")
            self.send_header("Cache-Control", "no-store")
            self.send_header("Content-Type", content_type)
            self.end_headers()
            self.wfile.write(bytes(response_content, "utf-8"))

        def do_POST(self) -> None:  # noqa: N802
            status = 200
            content_type = "text/plain"
            response_content = ""

            if self.path == "/polarimeter":
                content_length = int(self.headers["Content-Length"])
                post_data = self.rfile.read(content_length)
                json_data = json.loads(post_data.decode())
                angle = json_data["angle"]

                response_content = f"Setting angle to {angle:.2f}"
                mp.angle = angle
            else:
                status = 404

            self.send_response(status)
            self.send_header("Access-Control-Allow-Origin", "https://pqnetwork.web.illinois.edu")
            self.send_header("Content-Type", content_type)
            self.end_headers()
            self.wfile.write(bytes(response_content, "utf-8"))

    return RequestHandler


if __name__ == "__main__":
    sys.stdout.write("Initializing server...\n")
    httpd = HTTPServer(ADDRESS, get_handler(MockPolarimeter()))

    sys.stdout.write("Starting server...\n")
    try:
        sys.stdout.write(f"Server started at http://{HOST}:{PORT}/\n")
        httpd.serve_forever()
    except KeyboardInterrupt:
        httpd.shutdown()

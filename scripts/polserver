#!/usr/bin/env python

import sys
from collections.abc import Callable
from http.server import BaseHTTPRequestHandler
from http.server import HTTPServer

from pqnstack.pqn.drivers.polarimeter import ArduinoPolarimeter

HOST = "127.0.0.1"
PORT = 8000
ADDRESS = (HOST, PORT)


def get_handler(polarimeter: ArduinoPolarimeter) -> Callable[..., BaseHTTPRequestHandler]:
    class RequestHandler(BaseHTTPRequestHandler):
        def do_OPTIONS(self) -> None:  # noqa: N802
            status = 200
            self.send_response(status)
            self.send_header("Access-Control-Allow-Origin", "https://pqnetwork.web.illinois.edu")
            self.send_header("Access-Control-Allow-Methods", "GET, POST, HEAD, OPTIONS")
            self.send_header("Access-Control-Allow-Headers", "Content-Type, Cache-Control, Authorization")
            self.send_header("Access-Control-Allow-Credentials", "true")
            self.send_header("Access-Control-Allow-Private-Network", "true")
            self.end_headers()

        def do_GET(self) -> None:  # noqa: N802
            status = 200
            content_type = "text/plain"
            response_content = ""

            if self.path == "/polarimeter":
                angle = polarimeter.read().theta
                response_content = str(f"{angle:.2f}")
            else:
                status = 404

            self.send_response(status)
            self.send_header("Access-Control-Allow-Origin", "https://pqnetwork.web.illinois.edu")
            self.send_header("Cache-Control", "no-store")
            self.send_header("Content-Type", content_type)
            self.end_headers()
            self.wfile.write(bytes(response_content, "utf-8"))

        def do_POST(self) -> None:  # noqa: N802
            status = 200
            content_type = "text/plain"
            response_content = ""

            if self.path == "/polarimeter/start_normalizing":
                polarimeter.start_normalizing()
            elif self.path == "/polarimeter/stop_normalizing":
                polarimeter.stop_normalizing()
            else:
                status = 404

            self.send_response(status)
            self.send_header("Access-Control-Allow-Origin", "https://pqnetwork.web.illinois.edu")
            self.send_header("Content-Type", content_type)
            self.end_headers()
            self.wfile.write(bytes(response_content, "utf-8"))

    return RequestHandler


if __name__ == "__main__":
    sys.stdout.write("Initializing ArduinoPolarimeter...\n")
    try:
        polarimeter = ArduinoPolarimeter()
        polarimeter.start_normalizing()
    except Exception:
        sys.stderr.write("Could not connect the ArduinoPolarimeter. Is it plugged in?\n")
        raise
    sys.stdout.write("ArduinoPolarimeter connected\n")

    sys.stdout.write("Initializing server...\n")
    httpd = HTTPServer(ADDRESS, get_handler(polarimeter))

    sys.stdout.write("Starting server...\n")
    try:
        sys.stdout.write(f"Server started at http://{HOST}:{PORT}/\n")
        httpd.serve_forever()
    except KeyboardInterrupt:
        httpd.shutdown()
